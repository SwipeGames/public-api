components:
  schemas:
    ErrorResponse:
      description: |
        Common error response for Swipe Games Public API. You can provide either message or message and code. Code always has
        priority over message when both are provided. It means if you provide code, the client will handle it accordingly with some localized messaage,
        related to the code. If you provide only message, the client will show it to the player as is.
      type: object
      required:
        - message
      properties:
        message:
          description: A brief description of the error in English. Could be shown to the player.
          type: string
        details:
          description: Technical details for the error. Could be used for debugging, should not be shown to the player.
          type: string
        code:
          description: Error code. Could be handled by client accordingly (with localized message and related action).
          type: string
          enum:
            - game_not_found
            - currency_not_supported
            - locale_not_supported
            - account_blocked
            - bet_limit
            - loss_limit
            - time_limit
            - insufficient_funds
            - session_expired
            - session_not_found
            - client_connection_error

    ErrorResponseWithAction:
      description: |
        Error response for Swipe Games Integration Adapter Public API. In additional to the common error response,
        it contains an action field that describes the required client action (could be omit). If error code is provided in additional
        client will handle it accordingly and with priority over action.
      allOf:
        - $ref: "#/components/schemas/ErrorResponse"
        - type: object
          properties:
            action:
              description: |
                Required client action.
                - `refresh` - shows a refresh button to the player. Player cannot continue without refreshing the game page.
                     It's useful when the game session expires or the game is not available anymore. Once page is refreshed,
                     the game will be reloaded and the player can continue playing. This might not work when games aren't embedded
                     in the casino, but are opened in a new tab or window, since it will reopen the game again.
              type: string
              enum:
                - "refresh"
            actionData:
              description: |
                Client action related data.
                You can pass additional data to the client action. Not all actions require this field.
              type: string

    User:
      type: object
      required:
        - id
      properties:
        id:
          description: User's ID (external). This is User's ID on your side.
          type: string
        firstName:
          type: string
        lastName:
          type: string
        nickName:
          type: string
        country:
          description: Country code ISO 3166-1 alpha-2.
          type: string
